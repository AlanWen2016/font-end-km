(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{205:function(s,e,a){"use strict";a.r(e);var t=a(0),n=Object(t.a)({},function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"jwt认证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt认证","aria-hidden":"true"}},[s._v("#")]),s._v(" JWT认证")]),s._v(" "),a("p",[s._v("JSON WEB令牌，目前比较流行的跨域解决方案,开放标准(RFC 7519),使用JSON对象进行数据传递，通过签名进行信息验证。")]),s._v(" "),a("h3",{attrs:{id:"常规认证流程和存在问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常规认证流程和存在问题","aria-hidden":"true"}},[s._v("#")]),s._v(" 常规认证流程和存在问题")]),s._v(" "),a("p",[s._v("用户使用账号密码登陆后，服务端在当前会话（session）储存用户信息，并向客户端返回session_id存入cookie。随后的每个请求，cookie都会带上这个session_id想服务端进行验证，已确定用户的身份。\n这种方案在集群和跨域的站点，就需要实现session共享、是每台服务器都能读取到这个session。把session写的redis或者db可以解决这个问题。")]),s._v(" "),a("h3",{attrs:{id:"实现方案、安全问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现方案、安全问题","aria-hidden":"true"}},[s._v("#")]),s._v(" 实现方案、安全问题")]),s._v(" "),a("p",[s._v("用户登陆到服务端后，服务端返回给客户端一个JSON对象。JWT对象分为三部分：")]),s._v(" "),a("ul",[a("li",[s._v("Header（头部）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "alg": "HS256",\n  "typ": "JWT"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("Payload（负载）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("iss (issuer)：签发人\nexp (expiration time)：过期时间\nsub (subject)：主题\naud (audience)：受众\nnbf (Not Before)：生效时间\niat (Issued At)：签发时间\njti (JWT ID)：编号\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[s._v("Signature（签名）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('HMACSHA256(\n  base64UrlEncode(header) + "." +\n  base64UrlEncode(payload),\n  secret)\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v('算出签名以后，把 Header、Payload、Signature 三个部分拼成一个字符串，每个部分之间用"点"（.）分隔，就可以返回给用户。')]),s._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[s._v("验签算法实现方案")])]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("// php实现\n"),a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[s._v("<?")]),s._v("php"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    \n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("php"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用express实现")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"缺点："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点：","aria-hidden":"true"}},[s._v("#")]),s._v(" 缺点：")]),s._v(" "),a("p",[s._v("第四条是JWT 的最大缺点是，由于服务器不保存 session 状态，因此无法在使用过程中废止某个token，或者更改 token的权限。也就是说，一旦JWT 签发了，在到期之前就会始终有效，除非服务器部署额外的逻辑")]),s._v(" "),a("p",[s._v("因为jwt一般会放在redis或者mysql表，只要逻辑上去找到uid对应的jwt，删了就可以了。")]),s._v(" "),a("blockquote",[a("p",[s._v("相关知识： 单点登陆")])]),s._v(" "),a("p",[s._v("单点登录（Single Sign On），简称为 SSO，SSO的定义是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。\n单点登陆实现方案：共享cookie、通过JSONP、页面重定向、独立的登陆系统。实现方法可以参考这篇文章"),a("a",{attrs:{href:"https://yq.aliyun.com/articles/636281",target:"_blank",rel:"noopener noreferrer"}},[s._v("单点登录（SSO）看这一篇就够了"),a("OutboundLink")],1),s._v("。"),a("br"),s._v("\n一个单点登陆系统流程可以参考如下：")]),s._v(" "),a("ol",[a("li",[s._v("判断当前app应用是否登陆")]),s._v(" "),a("li",[s._v("若无登录，则跳转到登陆系统进行登陆")]),s._v(" "),a("li",[s._v("登陆完成，登陆系统生成一个Service Ticket,并跳转回app，写入登陆系统的Cookie。（这个cookie属于登陆系统域的，完成这个即代表用户已经通过单点登陆系统的认证）")]),s._v(" "),a("li",[s._v("当前app拿着这个sService Ticket去后台进行验证。（后台需要向登陆系统发送请求验证Service Ticket是否有效）")]),s._v(" "),a("li",[s._v("验证通过，则当前app可以种下自己的Cookie")])]),s._v(" "),a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("JSON Web Token 入门教程 - 阮一峰"),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:""}}),s._v(" "),a("a",{attrs:{href:""}})])])},[],!1,null,null,null);e.default=n.exports}}]);