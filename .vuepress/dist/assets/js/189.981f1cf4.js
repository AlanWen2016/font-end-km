(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{265:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node","aria-hidden":"true"}},[e._v("#")]),e._v(" node")]),e._v(" "),a("h3",{attrs:{id:"node-js的非阻塞i-o"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js的非阻塞i-o","aria-hidden":"true"}},[e._v("#")]),e._v(" Node.js的非阻塞I/O")]),e._v(" "),a("p",[e._v("阻塞I/O和非阻塞I/O的区别就在于系统接收输入再到输出期间，能不能接收其他输入\n"),a("image",{attrs:{src:"./node.png",width:"500px"}},[e._v("\n从线程的维度来看，想应用程序、V8和消息队列，都是在一个node.js线程里面完成，node.js的操作都是非阻塞，它会把大量的计算能力分发到C++线程计算，\n等计算完成在回调到node.js线程")])]),e._v(" "),a("h3",{attrs:{id:"node的异步编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node的异步编程","aria-hidden":"true"}},[e._v("#")]),e._v(" Node的异步编程")])])},[],!1,null,null,null);t.default=s.exports}}]);