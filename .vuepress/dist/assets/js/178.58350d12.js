(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{281:function(e,t,v){"use strict";v.r(t);var r=v(0),_=Object(r.a)({},function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"js执行机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js执行机制","aria-hidden":"true"}},[e._v("#")]),e._v(" js执行机制")]),e._v(" "),v("h2",{attrs:{id:"进程与线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程","aria-hidden":"true"}},[e._v("#")]),e._v(" 进程与线程")]),e._v(" "),v("p",[v("strong",[e._v("进程")]),e._v("是CPU资源分配的最小单位,进程包括运行中的程序和程序所使用到的内存和系统资源.")]),e._v(" "),v("p",[v("strong",[e._v("线程")]),e._v("是建立在进程的基础上的一次程序运行单位，通俗点解释线程就是程序中的一个执行流，一个进程可以有多个线程")]),e._v(" "),v("p",[e._v("区别：\n进程是操作系统分配资源的最小单位，线程是程序执行的最小单位")]),e._v(" "),v("p",[e._v("一个进程由一个或多个线程组成，线程可以理解为是一个进程中代码的不同执行路线")]),e._v(" "),v("p",[e._v("进程之间相互独立，但同一进程下的各个线程间共享程序的内存空间(包括代码段、数据集、堆等)及一些进程级的资源(如打开文件和信号)")]),e._v(" "),v("p",[e._v("调度和切换：线程上下文切换比进程上下文切换要快得多")]),e._v(" "),v("h2",{attrs:{id:"js单线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js单线程","aria-hidden":"true"}},[e._v("#")]),e._v(" js单线程")]),e._v(" "),v("ol",[v("li",[e._v("js作为浏览器端脚本语言，主要用于实现用户交互和操作dom,设计为单线程可以规避复杂的同步问题。")])]),e._v(" "),v("h2",{attrs:{id:"浏览器的进程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的进程","aria-hidden":"true"}},[e._v("#")]),e._v(" 浏览器的进程")]),e._v(" "),v("ol",[v("li",[e._v("浏览器的一些进程：\n1.1 Browser进程")])]),e._v(" "),v("ul",[v("li",[e._v("浏览器的主进程(负责协调、主控)，该进程只有一个")]),e._v(" "),v("li",[e._v("负责浏览器界面显示，与用户交互。如前进，后退等")]),e._v(" "),v("li",[e._v("负责各个页面的管理，创建和销毁其他进程")]),e._v(" "),v("li",[e._v("将渲染(Renderer)进程得到的内存中的Bitmap(位图)，绘制到用户界面上")]),e._v(" "),v("li",[e._v("网络资源的管理，下载等\n1.2 GPU进程")]),e._v(" "),v("li",[e._v("该进程也只有一个，用于3D绘制等等\n1.3 第三方插件进程")])]),e._v(" "),v("p",[e._v("1.4 渲染进程(重)\n-即通常所说的浏览器内核(Renderer进程，内部是多线程)\n-每个Tab页面都有一个渲染进程，互不影响\n-主要作用为页面渲染，脚本执行，事件处理等")]),e._v(" "),v("blockquote",[v("p",[e._v("渲染进程Renderer的主要线程: GUI渲染线程、JS引擎线程、事件触发线程、定时触发器线程、异步http请求线程")])]),e._v(" "),v("p",[e._v("GUI渲染线程\n负责渲染浏览器界面，解析HTML，CSS，构建DOM树和RenderObject树，布局和绘制等")]),e._v(" "),v("p",[e._v("解析html代码(HTML代码本质是字符串)转化为浏览器认识的节点，生成DOM树，也就是DOM Tree\n解析css，生成CSSOM(CSS规则树)\n把DOM Tree 和CSSOM结合，生成Rendering Tree(渲染树)")]),e._v(" "),v("p",[e._v("当我们修改了一些元素的颜色或者背景色，页面就会重绘(Repaint)\n当我们修改元素的尺寸，页面就会回流(Reflow)\n当页面需要Repaing和Reflow时GUI线程执行，绘制页面\n回流(Reflow)比重绘(Repaint)的成本要高，我们要尽量避免Reflow和Repaint\nGUI渲染线程与JS引擎线程是互斥的")]),e._v(" "),v("p",[e._v("当JS引擎执行时GUI线程会被挂起(相当于被冻结了)\nGUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行")]),e._v(" "),v("p",[e._v("JS引擎线程\nJS引擎线程就是JS内核，负责处理Javascript脚本程序(例如V8引擎)\nJS引擎线程负责解析Javascript脚本，运行代码\nJS引擎一直等待着任务队列中任务的到来，然后加以处理")]),e._v(" "),v("p",[e._v("浏览器同时只能有一个JS引擎线程在运行JS程序，所以js是单线程运行的\n一个Tab页(renderer进程)中无论什么时候都只有一个JS线程在运行JS程序")]),e._v(" "),v("p",[e._v("GUI渲染线程与JS引擎线程是互斥的，js引擎线程会阻塞GUI渲染线程")]),e._v(" "),v("p",[e._v('就是我们常遇到的JS执行时间过长，造成页面的渲染不连贯，导致页面渲染加载阻塞(就是加载慢)\n例如浏览器渲染的时候遇到"script"标签，就会停止GUI的渲染，然后js引擎线程开始工作，执行里面的js代码，等js执行完毕，js引擎线程停止工作，GUI继续渲染下面的内容。所以如果js执行时间太长就会造成页面卡顿的情况')]),e._v(" "),v("p",[e._v("事件触发线程")]),e._v(" "),v("p",[e._v("定时触发器线程")]),e._v(" "),v("p",[e._v("异步http请求线程")]),e._v(" "),v("h2",{attrs:{id:"事件循环"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件循环","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件循环")]),e._v(" "),v("p",[e._v("JS引擎线程只会执行执行栈中的事件，执行栈中的代码执行完毕，就会读取事件队列中的事件并添加到执行栈中继续执行，这样反反复复就是我们所谓的事件循环(Event Loop)")]),e._v(" "),v("h2",{attrs:{id:"宏任务与微任务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#宏任务与微任务","aria-hidden":"true"}},[e._v("#")]),e._v(" 宏任务与微任务")]),e._v(" "),v("p",[e._v("在ECMAScript中，macrotask也被称为task\n我们可以将每次执行栈执行的代码当做是一个宏任务(包括每次从事件队列中获取一个事件回调并放到执行栈中执行)， 每一个宏任务会从头到尾执行完毕，不会执行其他\n由于JS引擎线程和GUI渲染线程是互斥的关系，浏览器为了能够使宏任务和DOM任务有序的进行，会在一个宏任务执行结果后，在下一个宏任务执行前，GUI渲染线程开始工作，对页面进行渲染")]),e._v(" "),v("p",[e._v("常见的宏任务")]),e._v(" "),v("p",[e._v("主代码块\nsetTimeout\nsetInterval\nsetImmediate ()-Node\nrequestAnimationFrame ()-浏览器")]),e._v(" "),v("p",[e._v("ES6新引入了Promise标准，同时浏览器实现上多了一个microtask微任务概念，在ECMAScript中，microtask也被称为jobs\n我们已经知道宏任务结束后，会执行渲染，然后执行下一个宏任务， 而微任务可以理解成在当前宏任务执行后立即执行的任务\n当一个宏任务执行完，会在渲染前，将执行期间所产生的所有微任务都执行完")]),e._v(" "),v("p",[e._v("宏任务 -> 微任务 -> GUI渲染 -> 宏任务 -> ...")]),e._v(" "),v("p",[e._v("常见微任务")]),e._v(" "),v("p",[e._v("process.nextTick ()-Node\nPromise.then()\ncatch\nfinally\nObject.observe\nMutationObserver")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("参考：")]),e._v(" "),v("ol",[v("li",[v("a",{attrs:{href:"https://juejin.im/post/5e22b391f265da3e204d8c14#heading-13",target:"_blank",rel:"noopener noreferrer"}},[e._v("一次搞懂JS运行机制"),v("OutboundLink")],1)])])])},[],!1,null,null,null);t.default=_.exports}}]);