(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{452:function(t,e,s){"use strict";s.r(e);var v=s(0),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue基础"}},[t._v("#")]),t._v(" Vue基础")]),t._v(" "),s("h2",{attrs:{id:"vue组件通讯方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue组件通讯方式"}},[t._v("#")]),t._v(" vue组件通讯方式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("props和$emit(.sync v-model)")])]),t._v(" "),s("li",[s("p",[t._v("$parent和$children获取组件实例\n实现$dispatch向上传递事件\n实现$broadcast广播事件")])]),t._v(" "),s("li",[s("p",[t._v("事件和属性传递$attrs、$listener")])]),t._v(" "),s("li",[s("p",[t._v("provide和inject\n父组件向子组件传递注入信息")])]),t._v(" "),s("li",[s("p",[t._v("获取实例$refs\n通过组件实例获取组件的属性和方法")])]),t._v(" "),s("li",[s("p",[t._v("EventBus\n实例一个vue对象，并挂在vue原型上，因为这个实例也是响应式，用法分发事件和传递数据")])]),t._v(" "),s("li",[s("p",[t._v("Vuex")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);