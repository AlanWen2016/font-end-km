(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{433:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" node")]),t._v(" "),s("h3",{attrs:{id:"node-js的非阻塞i-o"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js的非阻塞i-o"}},[t._v("#")]),t._v(" Node.js的非阻塞I/O")]),t._v(" "),s("p",[t._v("阻塞I/O和非阻塞I/O的区别就在于系统接收输入再到输出期间，能不能接收其他输入\n"),s("image",{attrs:{src:"./node.png",width:"500px"}},[t._v("\n从线程的维度来看，想应用程序、V8和消息队列，都是在一个node.js线程里面完成，node.js的操作都是非阻塞，它会把大量的计算能力分发到C++线程计算，\n等计算完成在回调到node.js线程")])]),t._v(" "),s("h3",{attrs:{id:"node的异步编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node的异步编程"}},[t._v("#")]),t._v(" Node的异步编程")])])}),[],!1,null,null,null);e.default=a.exports}}]);