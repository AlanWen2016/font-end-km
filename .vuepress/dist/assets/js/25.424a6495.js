(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{237:function(e,s,n){"use strict";n.r(s);var a=n(0),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"docker基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker基础"}},[e._v("#")]),e._v(" docker基础")]),e._v(" "),n("h3",{attrs:{id:"_1-前提知识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-前提知识"}},[e._v("#")]),e._v(" 1.前提知识")]),e._v(" "),n("ul",[n("li",[e._v("Linux背景")]),e._v(" "),n("li",[e._v("Git")]),e._v(" "),n("li",[e._v("Go语言编写的容器技术")]),e._v(" "),n("li",[e._v("与jenkins整合")])]),e._v(" "),n("h2",{attrs:{id:"docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[e._v("#")]),e._v(" docker")]),e._v(" "),n("ul",[n("li",[e._v("解决开发和部署在环境和和配置上差异")]),e._v(" "),n("li",[e._v("集群部署\nDocker本身是一个容器运行载体，我们把运用程序打包好形成一个可交付的运行环境，这个打包好的运行环境就是镜像文件。镜像文件可以看作是容器的模板。")])]),e._v(" "),n("h2",{attrs:{id:"centos-安装docker安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#centos-安装docker安装"}},[e._v("#")]),e._v(" centOS 安装docker安装")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/centos/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方安装文档"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("安装步骤:")]),e._v(" "),n("ul",[n("li",[e._v("卸载旧版本docker")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("sudo yum remove docker \\\ndocker-client \\\ndocker-client-latest \\\ndocker-common \\\ndocker-latest \\\ndocker-latest-logrotate \\\ndocker-logrotate \\\ndocker-engine\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("ul",[n("li",[e._v("查看docker安装信息、版本")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("docker info\ndocker version\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("ul",[n("li",[e._v("安装依赖包")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("sudo yum install -y yum-utils device-mapper-persistent-data lvm2\n\nsudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("ul",[n("li",[e._v("安装docker-ce版本、docker-cli")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("sudo yum install docker-ce docker-ce-cli containerd.io\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("ul",[n("li",[e._v("启动docker后台服务")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("sudo systemctl start docker\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("ul",[n("li",[e._v("测试docker后台服务")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("docker run hello-world\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h3",{attrs:{id:"docker的镜像："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker的镜像："}},[e._v("#")]),e._v(" docker的镜像：")]),e._v(" "),n("p",[e._v("运行文档、配置环境、环境、运行依赖包、操作系统发行版、内核")]),e._v(" "),n("p",[e._v("docker的理念： 一处封装，到处运行")]),e._v(" "),n("h3",{attrs:{id:"docker用途"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker用途"}},[e._v("#")]),e._v(" docker用途")]),e._v(" "),n("ul",[n("li",[e._v("区别虚拟机\n虚拟机： 带环境安装的一种解决方案，虚拟机技术是在一种操作系统里面运行另一种操作系统")])]),e._v(" "),n("ol",[n("li",[e._v("在宿主机OS上运行虚拟机OS")]),e._v(" "),n("li",[e._v("镜像文件大")]),e._v(" "),n("li",[e._v("操作系统额外的CPU、内存消耗")]),e._v(" "),n("li",[e._v("笨重、与虚拟化技术耦合度搞")]),e._v(" "),n("li",[e._v("面向硬件运维者")]),e._v(" "),n("li",[e._v("较慢")])]),e._v(" "),n("ul",[n("li",[e._v("docker优点\n1.与宿主机共享OS\n2.镜像文件小\n3.易移植\n4.部署快")])]),e._v(" "),n("p",[e._v("轻量，简单，centos镜像一百多M")]),e._v(" "),n("h3",{attrs:{id:"docker的架构图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker的架构图"}},[e._v("#")]),e._v(" Docker的架构图")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("client\ndocker build\ndocker pull\ndocker run")])]),e._v(" "),n("li",[n("p",[e._v("docker_host\ncontainers\nimages")])]),e._v(" "),n("li",[n("p",[e._v("registry")])])]),e._v(" "),n("p",[e._v("三大要素：")]),e._v(" "),n("ol",[n("li",[e._v("镜像： image文件生成的容器实例，本身也是一个文件，称为镜像文件")]),e._v(" "),n("li",[e._v("容器： 用镜像创建的运行实例")]),e._v(" "),n("li",[e._v("仓库： 集中存放镜像文件的场所")])]),e._v(" "),n("h2",{attrs:{id:"docker命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker命令"}},[e._v("#")]),e._v(" docker命令")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("docker --help\n\n\n## List Docker CLI commands\ndocker\ndocker container --help\n\n## Display Docker version and info\ndocker --version\ndocker version\ndocker info\n\n## Execute Docker image\ndocker run hello-world\n\n## List Docker images\ndocker image ls\n\n## List Docker containers (running, all, all in quiet mode)\ndocker container ls\ndocker container ls --all\ndocker container ls -aq\n\n\n\ndocker build -t friendlyhello .  # Create image using this directory's Dockerfile\ndocker run -p 4000:80 friendlyhello  # Run \"friendlyhello\" mapping port 4000 to 80\ndocker run -d -p 4000:80 friendlyhello         # Same thing, but in detached mode\ndocker container ls                                # List all running containers\ndocker container ls -a             # List all containers, even those not running\ndocker container stop <hash>           # Gracefully stop the specified container\ndocker container kill <hash>         # Force shutdown of the specified container\ndocker container rm <hash>        # Remove specified container from this machine\ndocker container rm $(docker container ls -a -q)         # Remove all containers\ndocker image ls -a                             # List all images on this machine\ndocker image rm <image id>            # Remove specified image from this machine\ndocker image rm $(docker image ls -a -q)   # Remove all images from this machine\ndocker login             # Log in this CLI session using your Docker credentials\ndocker tag <image> username/repository:tag  # Tag <image> for upload to registry\ndocker push username/repository:tag            # Upload tagged image to registry\ndocker run username/repository:tag                   # Run image from a registry\n\n\nattach    Attach to a running container                 # 当前 shell 下 attach 连接指定运行镜像\nbuild     Build an image from a Dockerfile              # 通过 Dockerfile 定制镜像\ncommit    Create a new image from a container changes   # 提交当前容器为新的镜像\ncp        Copy files/folders from the containers filesystem to the host path   #从容器中拷贝指定文件或者目录到宿主机中\ncreate    Create a new container                        # 创建一个新的容器，同 run，但不启动容器\ndiff      Inspect changes on a container's filesystem   # 查看 docker 容器变化\nevents    Get real time events from the server          # 从 docker 服务获取容器实时事件\nexec      Run a command in an existing container        # 在已存在的容器上运行命令\nexport    Stream the contents of a container as a tar archive   # 导出容器的内容流作为一个 tar 归档文件[对应 import ]\nhistory   Show the history of an image                  # 展示一个镜像形成历史\nimages    List images                                   # 列出系统当前镜像\nimport    Create a new filesystem image from the contents of a tarball # 从tar包中的内容创建一个新的文件系统映像[对应export]\ninfo      Display system-wide information               # 显示系统相关信息\ninspect   Return low-level information on a container   # 查看容器详细信息\nkill      Kill a running container                      # kill 指定 docker 容器\nload      Load an image from a tar archive              # 从一个 tar 包中加载一个镜像[对应 save]\nlogin     Register or Login to the docker registry server    # 注册或者登陆一个 docker 源服务器\nlogout    Log out from a Docker registry server         # 从当前 Docker registry 退出\nlogs      Fetch the logs of a container                 # 输出当前容器日志信息\nport      Lookup the public-facing port which is NAT-ed to PRIVATE_PORT    # 查看映射端口对应的容器内部源端口\npause     Pause all processes within a container        # 暂停容器\nps        List containers                               # 列出容器列表\npull      Pull an image or a repository from the docker registry server   # 从docker镜像源服务器拉取指定镜像或者库镜像\npush      Push an image or a repository to the docker registry server    # 推送指定镜像或者库镜像至docker源服务器\nrestart   Restart a running container                   # 重启运行的容器\nrm        Remove one or more containers                 # 移除一个或者多个容器\nrmi       Remove one or more images             # 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 -f 强制删除]\nrun       Run a command in a new container              # 创建一个新的容器并运行一个命令\nsave      Save an image to a tar archive                # 保存一个镜像为一个 tar 包[对应 load]\nsearch    Search for an image on the Docker Hub         # 在 docker hub 中搜索镜像\nstart     Start a stopped containers                    # 启动容器\nstop      Stop a running containers                     # 停止容器\ntag       Tag an image into a repository                # 给源中镜像打标签\ntop       Lookup the running processes of a container   # 查看容器中运行的进程信息\nunpause   Unpause a paused container                    # 取消暂停容器\nversion   Show the docker version information           # 查看 docker 版本号\nwait      Block until a container stops, then print its exit code   # 截取容器停止时的退出状态值\n \n\n// 镜像列表\ndocker images\n\n// 查找镜像\ndocker search ...\n\n// 下载镜像,使用tag确定版本\ndocker pull tomcat  //等价于 docker pull tomcat:latest\n\n// 删除镜像\ndocker rmi hello-world\n\ndocker start imageId\n\n// 查看运行的容器\ndocker ps \n\ndocker stop\n\ndocker kill\n\n// Ctrl + P + Q 退出当前\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br"),n("span",{staticClass:"line-number"},[e._v("36")]),n("br"),n("span",{staticClass:"line-number"},[e._v("37")]),n("br"),n("span",{staticClass:"line-number"},[e._v("38")]),n("br"),n("span",{staticClass:"line-number"},[e._v("39")]),n("br"),n("span",{staticClass:"line-number"},[e._v("40")]),n("br"),n("span",{staticClass:"line-number"},[e._v("41")]),n("br"),n("span",{staticClass:"line-number"},[e._v("42")]),n("br"),n("span",{staticClass:"line-number"},[e._v("43")]),n("br"),n("span",{staticClass:"line-number"},[e._v("44")]),n("br"),n("span",{staticClass:"line-number"},[e._v("45")]),n("br"),n("span",{staticClass:"line-number"},[e._v("46")]),n("br"),n("span",{staticClass:"line-number"},[e._v("47")]),n("br"),n("span",{staticClass:"line-number"},[e._v("48")]),n("br"),n("span",{staticClass:"line-number"},[e._v("49")]),n("br"),n("span",{staticClass:"line-number"},[e._v("50")]),n("br"),n("span",{staticClass:"line-number"},[e._v("51")]),n("br"),n("span",{staticClass:"line-number"},[e._v("52")]),n("br"),n("span",{staticClass:"line-number"},[e._v("53")]),n("br"),n("span",{staticClass:"line-number"},[e._v("54")]),n("br"),n("span",{staticClass:"line-number"},[e._v("55")]),n("br"),n("span",{staticClass:"line-number"},[e._v("56")]),n("br"),n("span",{staticClass:"line-number"},[e._v("57")]),n("br"),n("span",{staticClass:"line-number"},[e._v("58")]),n("br"),n("span",{staticClass:"line-number"},[e._v("59")]),n("br"),n("span",{staticClass:"line-number"},[e._v("60")]),n("br"),n("span",{staticClass:"line-number"},[e._v("61")]),n("br"),n("span",{staticClass:"line-number"},[e._v("62")]),n("br"),n("span",{staticClass:"line-number"},[e._v("63")]),n("br"),n("span",{staticClass:"line-number"},[e._v("64")]),n("br"),n("span",{staticClass:"line-number"},[e._v("65")]),n("br"),n("span",{staticClass:"line-number"},[e._v("66")]),n("br"),n("span",{staticClass:"line-number"},[e._v("67")]),n("br"),n("span",{staticClass:"line-number"},[e._v("68")]),n("br"),n("span",{staticClass:"line-number"},[e._v("69")]),n("br"),n("span",{staticClass:"line-number"},[e._v("70")]),n("br"),n("span",{staticClass:"line-number"},[e._v("71")]),n("br"),n("span",{staticClass:"line-number"},[e._v("72")]),n("br"),n("span",{staticClass:"line-number"},[e._v("73")]),n("br"),n("span",{staticClass:"line-number"},[e._v("74")]),n("br"),n("span",{staticClass:"line-number"},[e._v("75")]),n("br"),n("span",{staticClass:"line-number"},[e._v("76")]),n("br"),n("span",{staticClass:"line-number"},[e._v("77")]),n("br"),n("span",{staticClass:"line-number"},[e._v("78")]),n("br"),n("span",{staticClass:"line-number"},[e._v("79")]),n("br"),n("span",{staticClass:"line-number"},[e._v("80")]),n("br"),n("span",{staticClass:"line-number"},[e._v("81")]),n("br"),n("span",{staticClass:"line-number"},[e._v("82")]),n("br"),n("span",{staticClass:"line-number"},[e._v("83")]),n("br"),n("span",{staticClass:"line-number"},[e._v("84")]),n("br"),n("span",{staticClass:"line-number"},[e._v("85")]),n("br"),n("span",{staticClass:"line-number"},[e._v("86")]),n("br"),n("span",{staticClass:"line-number"},[e._v("87")]),n("br"),n("span",{staticClass:"line-number"},[e._v("88")]),n("br"),n("span",{staticClass:"line-number"},[e._v("89")]),n("br"),n("span",{staticClass:"line-number"},[e._v("90")]),n("br"),n("span",{staticClass:"line-number"},[e._v("91")]),n("br"),n("span",{staticClass:"line-number"},[e._v("92")]),n("br"),n("span",{staticClass:"line-number"},[e._v("93")]),n("br"),n("span",{staticClass:"line-number"},[e._v("94")]),n("br"),n("span",{staticClass:"line-number"},[e._v("95")]),n("br"),n("span",{staticClass:"line-number"},[e._v("96")]),n("br"),n("span",{staticClass:"line-number"},[e._v("97")]),n("br"),n("span",{staticClass:"line-number"},[e._v("98")]),n("br"),n("span",{staticClass:"line-number"},[e._v("99")]),n("br"),n("span",{staticClass:"line-number"},[e._v("100")]),n("br"),n("span",{staticClass:"line-number"},[e._v("101")]),n("br"),n("span",{staticClass:"line-number"},[e._v("102")]),n("br"),n("span",{staticClass:"line-number"},[e._v("103")]),n("br"),n("span",{staticClass:"line-number"},[e._v("104")]),n("br"),n("span",{staticClass:"line-number"},[e._v("105")]),n("br")])]),n("h2",{attrs:{id:"装centos镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#装centos镜像"}},[e._v("#")]),e._v(" 装centos镜像")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("//\ndocker run -it --name mycentos\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("//")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('docker run -d centos /bin/sh -c "while true; do echo hello docker;sleep 2; done"\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h2",{attrs:{id:"容器镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器镜像"}},[e._v("#")]),e._v(" 容器镜像")]),e._v(" "),n("ul",[n("li",[e._v("自定义镜像")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 提交镜像\ndocker commit \n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h2",{attrs:{id:"docker容器数据卷"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker容器数据卷"}},[e._v("#")]),e._v(" docker容器数据卷")]),e._v(" "),n("p",[e._v("1.容器数据持久化\n2.容器之间共享数据")]),e._v(" "),n("p",[e._v("// redis分布式式的内存持久化")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("docker cp // 从容器内拷贝文件到目的主机\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("ul",[n("li",[e._v("直接命令添加")]),e._v(" "),n("li",[e._v("dockerFile添加")]),e._v(" "),n("li",[e._v("备注")])]),e._v(" "),n("p",[e._v("docker run -it -v /宿主机绝对路径目录：/容器内目录 镜像名")]),e._v(" "),n("p",[e._v("docker run -it /myDataVolumn:/dataVolumnContainer imageNames")]),e._v(" "),n("p",[e._v("Notes:\n此时宿主机下的myDataVolumn与容器内dataVolumnContainer实现目录共享")]),e._v(" "),n("h2",{attrs:{id:"docker数据管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker数据管理"}},[e._v("#")]),e._v(" docker数据管理")]),e._v(" "),n("h3",{attrs:{id:"基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[e._v("#")]),e._v(" 基本概念")]),e._v(" "),n("ul",[n("li",[n("ol",[n("li",[e._v("数据卷（Data Volumes）:容器内数据直接映射到本地主机环境")])])]),e._v(" "),n("li",[n("ol",{attrs:{start:"2"}},[n("li",[e._v("数据卷容器（Data Volumn Containers）: 使用特定的容器维护数据卷")])])])]),e._v(" "),n("h3",{attrs:{id:"重点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重点"}},[e._v("#")]),e._v(" 重点")]),e._v(" "),n("ul",[n("li",[e._v("a. 如何在容器内创建数据卷")]),e._v(" "),n("li",[e._v("b. 如何把本机的目录或文件目录或者文件挂载到容器内的数据卷中")]),e._v(" "),n("li",[e._v("c. 数据卷容器和容器和主机、容器和容器之间共享数据")]),e._v(" "),n("li",[e._v("d.")])]),e._v(" "),n("h2",{attrs:{id:"使用dockerfile创建镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用dockerfile创建镜像"}},[e._v("#")]),e._v(" 使用dockerfile创建镜像")]),e._v(" "),n("p",[e._v("Dockerfile是一个文本格式的配置文件，用户可以使用dockerfile来快速自定义的镜像。")]),e._v(" "),n("p",[e._v("构建步骤： dockerfile编写-> docker build -> docker run\n重点：")]),e._v(" "),n("ul",[n("li",[n("ol",[n("li",[e._v("dockerfile典型的基本结构")])])]),e._v(" "),n("li",[n("ol",{attrs:{start:"2"}},[n("li",[e._v("相关指令")])])]),e._v(" "),n("li",[n("ol",{attrs:{start:"3"}},[n("li",[e._v("最佳实践")])])])]),e._v(" "),n("blockquote",[n("p",[e._v("Dockerfile基本结构\n看看下载镜像centos的dockerfile结构")])]),e._v(" "),n("div",{staticClass:"language-Dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("From centos:\n\n\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);