(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{210:function(e,t,r){"use strict";r.r(t);var a=r(0),n=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue基础","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue基础")]),e._v(" "),r("h2",{attrs:{id:"vue组件通讯方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue组件通讯方式","aria-hidden":"true"}},[e._v("#")]),e._v(" vue组件通讯方式")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("props和$emit(.sync v-model)")])]),e._v(" "),r("li",[r("p",[e._v("$parent和$children获取组件实例\n实现$dispatch向上传递事件\n实现$broadcast广播事件")])]),e._v(" "),r("li",[r("p",[e._v("事件和属性传递$attrs、$listener")])]),e._v(" "),r("li",[r("p",[e._v("provide和inject\n父组件向子组件传递注入信息")])]),e._v(" "),r("li",[r("p",[e._v("获取实例$refs\n通过组件实例获取组件的属性和方法")])]),e._v(" "),r("li",[r("p",[e._v("EventBus\n实例一个vue对象，并挂在vue原型上，因为这个实例也是响应式，用法分发事件和传递数据")])]),e._v(" "),r("li",[r("p",[e._v("Vuex")])])])])},[],!1,null,null,null);t.default=n.exports}}]);