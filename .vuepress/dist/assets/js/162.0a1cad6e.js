(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{298:function(e,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"由dockerfile构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#由dockerfile构建镜像","aria-hidden":"true"}},[e._v("#")]),e._v(" 由dockerfile构建镜像")]),e._v(" "),a("h2",{attrs:{id:"dockerfile构建命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile构建命令","aria-hidden":"true"}},[e._v("#")]),e._v(" dockerfile构建命令")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker image build [OPTIONS] PATH|URL -\n\nOPTIONS:\n-t, --tag, 指定镜像名称\n-f, --file string #指定dockerfile文件位置\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h2",{attrs:{id:"dockerfile镜像文件编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile镜像文件编写","aria-hidden":"true"}},[e._v("#")]),e._v(" dockerfile镜像文件编写")]),e._v(" "),a("p",[e._v("先看一个简单的dockerfile")]),e._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM nginx\nRUN echo '这是一个本地构建的nginx镜像' > /usr/share/nginx/html/index.html\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("执行Dockerfile文件，构建镜像")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("docker build -t nginx2:test22 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v(".")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"from-run命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-run命令","aria-hidden":"true"}},[e._v("#")]),e._v(" FROM, RUN命令")]),e._v(" "),a("p",[e._v("FROM：定制的镜像都是基于 FROM 的镜像，这里的 nginx 就是定制需要的基础镜像。后续的操作都是基于 nginx。\nRUN：用于执行后面跟着的命令行命令。")]),e._v(" "),a("p",[e._v("FROM centos\nRUN yum install wget "),a("br"),e._v('\n&& wget -O redis.tar.gz "http://download.redis.io/releases/redis-5.0.3.tar.gz" '),a("br"),e._v("\n&& tar -xvf redis.tar.gz")]),e._v(" "),a("p",[e._v("docker挂载主机目录，docker访问出现 premission denied\n解决目录：在挂载目录多加 --previleged=true")]),e._v(" "),a("h3",{attrs:{id:"指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令","aria-hidden":"true"}},[e._v("#")]),e._v(" 指令")]),e._v(" "),a("p",[a("strong",[e._v("COPY")]),e._v(" 复制指令，从上下文目录中复制文件或者目录到容器里指定路径\nCOPY hom?.txt /mydir/")]),e._v(" "),a("p",[a("strong",[e._v("ADD")]),e._v("\nADD 指令和 COPY 的使用格式一致（同样需求下，官方推荐使用 COPY）。功能也类似")]),e._v(" "),a("p",[a("strong",[e._v("CMD")]),e._v("\n类似于 RUN 指令，用于运行程序，但二者运行的时间点不同:CMD 在docker run 时运行。RUN 是在 docker build。")]),e._v(" "),a("p",[a("strong",[e._v("ENTRYPOINT")]),e._v("\n类似于 CMD 指令，但其不会被 docker run 的命令行参数指定的指令所覆盖，而且这些命令行参数会被当作参数送给 ENTRYPOINT 指令指定的程序。")]),e._v(" "),a("p",[a("strong",[e._v("ENV")]),e._v("\n设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。")]),e._v(" "),a("p",[a("strong",[e._v("ARG")]),e._v("\n构建参数，与 ENV 作用一至。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效，也就是说只有 docker build 的过程中有效，构建好的镜像内不存在此环境变量。")]),e._v(" "),a("p",[a("strong",[e._v("VOLUME")]),e._v("\n定义匿名数据卷。在启动容器时忘记挂载数据卷，会自动挂载到匿名卷。")]),e._v(" "),a("p",[a("strong",[e._v("EXPOSE")]),e._v("\n仅仅只是声明端口。")]),e._v(" "),a("p",[a("strong",[e._v("WORKDIR")]),e._v("\n指定工作目录。用 WORKDIR 指定的工作目录，会在构建镜像的每一层中都存在。")]),e._v(" "),a("p",[a("strong",[e._v("USER")]),e._v("\n用于指定执行后续命令的用户和用户组，这边只是切换后续命令执行的用户（用户和用户组必须提前已经存在）。")]),e._v(" "),a("p",[a("strong",[e._v("HEALTHCHECK")]),e._v("\n用于指定某个程序或者指令来监控 docker 容器服务的运行状态。")]),e._v(" "),a("p",[a("strong",[e._v("ONBUILD")]),e._v("\n用于延迟构建命令的执行。")]),e._v(" "),a("h2",{attrs:{id:"通过一个dockerfile创建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过一个dockerfile创建镜像","aria-hidden":"true"}},[e._v("#")]),e._v(" 通过一个dockerfile创建镜像")]),e._v(" "),a("ul",[a("li",[e._v("1.创建dockerfile文件")])]),e._v(" "),a("p",[e._v("\b"),a("code",[e._v("vim Dockerfile")])]),e._v(" "),a("p",[e._v("Dockerfile内容")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM centos\nVOLUME ["dataV1","dataV2"]\nCMD echo "finished ********************** done"\nCMD /bin/bash\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("构建镜像")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker build c2:t1 .\n// 查看生成的镜像\ndocker images \n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("构建容器")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" docker run -it --name c2-demo c2:t1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("进入容器镜像可以看到容量内部\b,有dockerfile预设的两个文件夹dataV1, dataV2")]),e._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[e._v("由于dockerfile中没有指定挂载到宿主机的文件目录，那么dataV1, dataV2挂载到宿主机到哪个目录")])]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("// 4.1 查询当前运行容器到container "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("id")]),e._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v(" \n// 结果如下\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES\n588253eaa3f9        c2:t1               "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/bin/sh -c /bin/bash"')]),e._v("   50 minutes ago      Up 50 minutes                            c2-demo\n\n// 4.2 查询该容器到详细信息, 包括挂载目录。\ndocker inpect 588253eaa3f9\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h2",{attrs:{id:"容器间的传递共享"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器间的传递共享","aria-hidden":"true"}},[e._v("#")]),e._v(" 容器间的传递共享")])])},[],!1,null,null,null);s.default=r.exports}}]);